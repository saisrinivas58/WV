{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        
        "applicationGatewayName": {
            "type": "string"
        },
        "tier": {
            "defaultValue": "Standard_v2",
            "type":"string"
        },
        "skuSize": {
            "defaultValue": "Standard_v2",
            "type":"string"
        },
        "capacity": {
            "defaultValue": 2,
            "type":"int"
        },
        "subnetName": {
            "type": "string"
        },
        "zones": {
            "type": "array"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "virtualNetworkPrefix": {
            "type": "array"
        },
        "publicIpAddressName": {
            "type": "string"           
        },
        "sku": {
            "defaultValue": "Standard",
            "type":"string"
        },
        "allocationMethod": {
            "defaultValue": "Static",
            "type":"string"
        },
        "publicIpZones": {
            
            "type":"array"
        },
       
        "resourceGroupShared":{
            "type":"string"
        },
        "webSiteName":{
        "type":"string"
        },
        
        "backendAddressPools":{
            
          "type":"string"
        },
        "httpListener":{
            
        "type":"string"
        },
        "requestRoutingRules":{
            
            "type":"string"
        },
        "backendHttpSettingsCollection":{
            "type":"string"
        },
        
        "frontendCertData": {
            "type": "string",
            "metadata": {
              "description": "Base-64 encoded form of the .pfx file. This is the cert terminating on the Application Gateway."
            }
        },
          "frontendCertPassword": {
            "type": "securestring",
            "metadata": {
              "description": "Password for .pfx certificate"
         }
        }

    
    },
    "variables": {
        "vnetId": "[resourceId(parameters('resourceGroupShared'),'Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]"
		
    },
    "resources": [
        {
            "name": "[parameters('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "zones": "[parameters('zones')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]"
            ],
            "tags": {},
            
            "properties": {
                "sku": {
                    "name": "[parameters('skuSize')]",
                    "tier": "[parameters('tier')]",
                    "capacity": "[parameters('capacity')]"
                },
                "sslCertificates": [
                    {
                      "name": "appGatewayFrontEndSslCert",
                      "properties": {
                        "data": "[parameters('frontendCertData')]",
                        "password": "[parameters('frontendCertPassword')]"
                      }
                    }
                  ],
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPRef')]"
                            }
                        }
                    }
                ],
                
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "Port": 80
                        }
                    },
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('backendAddressPools')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[concat(parameters('webSiteName'), '.azurewebsites.net')]"
                                }
								
                                
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[parameters('backendHttpSettingsCollection')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Enabled",
                            "connectionDraining": {
                                "enabled": true,
                                "drainTimeoutInSec": 60
                            },
                            
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 20
                        }
                        
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[parameters('httpListener')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http"
                        
                        }
                    },
                    {
                        "name": "httpslisner",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/sslCertificates/appGatewayFrontEndSslCert')]"
                            },
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "[parameters('requestRoutingRules')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/',parameters('httpListener'))]"
                            },
                            "redirectConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/redirectConfigurations/',parameters('backendAddressPools'))]"
                            }
                        }
                    },
                    {
                        "name": "rule2",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/httpslisner')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/',parameters('backendAddressPools'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/',parameters('backendHttpSettingsCollection'))]"
                            }
                        }
                    }
                ],
                "redirectConfigurations": [
                    {
                        "name": "[parameters('backendAddressPools')]",
                        "properties": {
                            "redirectType": "Permanent",
                            "targetListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/httpslisner')]"
                            },
                            "includePath": true,
                            "includeQueryString": true,
                            "requestRoutingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/requestRoutingRules/',parameters('requestRoutingRules'))]"
                                }
                            ]
                        }
                    }
                ],
                "enableHttp2": false,
                
                "probes": []
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('virtualNetworkPrefix')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIpAddressName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "zones": "[parameters('publicIpZones')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('allocationMethod')]"
            }
        }
    ]
}